module.exports = {
  env: {
    browser: true,
    'cypress/globals': true,
    es6: true,
    es2020: true,
    node: true,
    'vitest-globals/env': true,
  },
  extends: [
    'eslint:recommended',
    'react-app',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
    'plugin:vitest-globals/recommended',
    'plugin:cypress/recommended',
  ],
  'overrides': [
    {
      'env': { 'vitest-globals/env': true },
      'files': [ '**/__tests__/*.{j,t}s?(x)', '**/*.spec.{j,t}s?(x)' ],
    },
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: [ 'cypress', 'react-refresh' ],
  rules: {
    'array-bracket-spacing': [ 'error', 'always' ],
    'arrow-body-style': [ 'error', 'as-needed' ],
    'arrow-parens': [ 'error', 'always' ],
    'arrow-spacing': 'error',
    'block-spacing': [ 'error', 'always' ],
    'brace-style': [ 'error', '1tbs', { 'allowSingleLine': false } ],
    'comma-dangle': [ 'error', {
      'arrays': 'always-multiline',
      'exports': 'always-multiline',
      'functions': 'always-multiline',
      'imports': 'always-multiline',
      'objects': 'always-multiline',
    } ],
    'comma-spacing': [ 'error', {
      'after': true,
      'before': false,
    } ],
    'comma-style': [ 'error', 'last' ],
    'eqeqeq': 'error',
    'getter-return': [ 'error', { 'allowImplicit': true } ],
    'indent': [
      'error',
      2,
      { 'VariableDeclarator': 'first' },
    ],
    'jsx-quotes': [ 'error', 'prefer-single' ],
    'key-spacing': [ 'error', {
      'beforeColon': false,
      'mode': 'strict',
    } ],
    'linebreak-style': [ 'error', 'unix' ],
    'max-len': [
      'error',
      { 'code': 120 },
    ],
    'no-console': 'warn',
    'no-const-assign': 'error',
    'no-debugger': 'warn',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-imports': 'error',
    'no-empty': 'error',
    'no-import-assign': 'error',
    'no-irregular-whitespace': 'error',
    'no-multi-spaces': 'error',
    'no-nested-ternary': 'error',
    'no-trailing-spaces': [ 'error', { 'skipBlankLines': false } ],
    'no-undef': 'error',
    'no-unneeded-ternary': 'error',
    'no-unreachable': 'error',
    'no-unused-expressions': 'error',
    'no-unused-vars': 'error',
    'no-var': 'error',
    'object-curly-newline': [ 'error', { 'multiline': true } ],
    'object-curly-spacing': [ 'error', 'always' ],
    'object-property-newline': 'error',
    'operator-linebreak': [ 'error', 'before' ],
    'padding-line-between-statements': [
      'error',
      {
        'blankLine': 'always',
        'next': '*',
        'prev': [ 'const', 'let', 'var' ],
      },
      {
        'blankLine': 'any',
        'next': [ 'const', 'let', 'var' ],
        'prev': [ 'const', 'let', 'var' ],
      },
    ],
    'prefer-const': 'error',
    'prefer-template': 'warn',
    'quotes': [ 'error', 'single', { 'avoidEscape': true } ],
    'react/jsx-curly-spacing': [ 'error', 'always' ],
    'require-yield': 'error',
    'semi': [ 'error', 'never' ],
    'sort-keys': [ 'error', 'asc', { 'natural': true } ],
    'sort-vars': 'error',
    'space-in-parens': [ 'error', 'always' ],
    'space-infix-ops': 'error',
    'template-curly-spacing': [ 'error', 'always' ],
    'vars-on-top': 'error',
    'yoda': [ 'error', 'always' ],
  },
}
